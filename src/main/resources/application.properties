server.contextPath = /uhamka-ws
server.port = 8085
# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "test" as database name and 
# "root" as username and password.
#spring.datasource.url = jdbc:mysql://localhost:3306/sistem_informasi
#spring.datasource.username = sistem_informasi
#spring.datasource.password = welcome1
spring.datasource.url = jdbc:mysql://156.67.220.50:3306/sistem_informasi
spring.datasource.username = uhamka
spring.datasource.password = welcome1
#spring.datasource.username = root
#spring.datasource.password = 


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect